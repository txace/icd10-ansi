start AnsiWrap(parmfile, option, retcode)
 %VERSION 0.4.000 10/08/2015
'Author:  R. Whaite, Helen Farabee Centers
'Create Date:  8/16/2011
'
'This script will check to make sure specific bill files are not present before allowing the billing process
'for a particular fund sournce to be run.  This will prevent a subsequently run billing process from replacing
'a production bill file with another file of the same name before the file has been submitted and archived.
'
'This script relies on the BillParm name being placed in the Add Parm1 menu item.  It uses this ParmFile name to get the file
'name to check.

'It also dynamically creates the ANSI 837 parmfile tells the ANSI process to process as version 5010

'Lastly, if any special file edits need to be completed on the file before submission (ie: Texas LTC TypeAB KX Modifer)
'A UNIX Command can be defined that will make those changes to the file.  Otherwise, do not set a value for the 
'variable "FixCMD"

'Define the parameters we'll need.
parmfile       is x
option         is x
retcode        is b

$allowupdate(retcode)

win1           is b   'Window Handle number
rc             is i   'Function return codes
CreateBill     is b   'Error code from $misprog
FileName       is x   'Name of output file
CheckFile      is x   'Output file name & path
FilePath       is x   'path to output file
FileSize       is n
FileCreateDT   is d
FileCreateTM   is t
FileOwner      is x
BillParm       is x
FixCMD         is x   'Unix command for fixing output file
Version        is x   '5010 or 4010
ParmArray[]    is x   'Array for building a parameter file
VerParm        is x   'Parameter file name

nsa837p5       is x
nsa837p5parm   is x

misprogerr[]   is x

bill-parm      is x   'Billing Parm file to use selected from either $adparm1 or $adparm2
tempfile       is x   'Temporary file for the FixCmd
tracepath      is x

promptforparm  is x
requirebillparm   is x

prescript[]    is x
postscript[]   is x

'Default the bill_parm to the $adparm from the menu
nsa837p5 = "Y"
'nsa837p5parm = $adparm1
bill-parm = $adparm1

misprogerr[1 ] = "The mis-prog-ref isn't in the program control file"
misprogerr[2 ] = "Operator isn't authorized to initiate this program"
misprogerr[3 ] = "This function isn't permitted if $sessiontabs is active"
misprogerr[4 ] = "The program attempted is not allowed in $misprog (e.g. menu)"
misprogerr[5 ] = "$misprog cannot be executed while $setmis is in effect"
misprogerr[6 ] = "Program is browser only and session is in character mode"
misprogerr[7 ] = "Program is non-browser mode and session is in browser mode"
misprogerr[8 ] = "Error bidding the CMHC/MIS program"
misprogerr[9 ] = "Program control file error"
misprogerr[10] = "The session is a CRON, but the requested CMHC/MIS program cannot be run in CRON mode"
misprogerr[11] = "More than one left-frame menu referenced"

getparm(parmfile)
getoption(option)

if tracepath dp then
   $trace("on,path", tracepath)
endif

if nsa837p5parm dp then
   bill-parm = nsa837p5parm
endif

'' if we don't have a bill parm ask for one if the config says it's ok to ask
if bill-parm !DP and promptforparm = "Y" then
      $openwin(win1, 5, 25, 4, 64)
      $disp("Billing Parm:", 6, 5,,"H")
      $acpt(bill-parm, 6, 20, 8)
      if bill-parm !dp then 
         retcode = 98
         return
      endif
endif

' panic if we still don't have a bill parm
if bill-parm !dp then
   ShowMessageWin("Billing Parm File Not Specified",,"Print this Screen and Contact MIS")
   retcode = 98
   return
endif

'check the billing parm file for the parameter "SEQOUT", if it is present, put the value into the CheckFile variable.
'We should probably do some error checking to handle situations when the SEQOUT parmaeter is not present.  If this is the case, 
'The process should notify the user and then abort (return).

if $getparm(,bill-parm, "SEQOUT", CheckFile) >= 2 then
   ShowMessageWin("SEQOUT Parm Not in Parmfile",,"Print this Screen and Contact MIS")
   return
endif

'Check to see if the file is there.  If it is, give the error message and terminate the script.
'If it is not, allow the 837P proess to continue with the parm in Add Parm 1.

rc = $checkfile(CheckFile,FileSize,FileCreateDT,FileCreateTM,,,FileOwner)

if rc = 0                 'If the file already exists, issue the error message and instructions to the user
   $openwin(win1, 5, 25, 4, 64)
   $disp("Script ID:", 6, 5,,"H")
   $disp($scriptid,    6,16,,)
   $disp(`"FILE REPLACEMENT ERROR, " + CheckFile + " File Exists!"`, 7, 5,,"H")
   $disp(`"File Size:  " + FileSize + " bytes"`, 9, 5,,"H")
   $disp(`"File Date:  " + FileCreateDT`, 10, 5,,"H")
   $disp(`"File Time:  " + FileCreateTM`, 11, 5,,"H")
   $disp(`"File Owner: " + FileOwner`, 12, 5,,"H")
   $disp("Print this Screen and Contact MIS", 19, 5,,"H")
   $acpt()
   retcode = 99
   return
endif                

'process the prescripts
rc = 0
do while rc++ < $maxarray(prescript[])
   call prescript[rc] (parmfile, option, checkfile, retcode)
enddo

'dynamically create the bill parm that tells the process to run as 5010 if we don't have a NSA parameter
verparm = parmfile
if nsa837p5parm !dp then
   ParmArray[1] = "NSA837P5"
   ParmArray[2] = "NSA837P5PARM " + bill-parm
   VerParm = "VP5010"
   rc = $putparm(ParmArray[],VerParm,"R")
endif

CreateBill = $misprog(474,VerParm)

if createbill > 0 then
   $errmsg1 = misprogerr[rc]
   if $errmsg1 !dp then
      $errmsg1 = $format(rc, "Unknown error (99)")
   endif
   retcode = rc
   return
endif

'process the postscripts
rc = 0
do while rc++ < $maxarray(postscript[])
   call postscript[rc] (parmfile, option, checkfile, retcode)
enddo

end AnsiWrap

%include inc_GetParm
%include inc_GetOption

function ShowMessageWin(msg1, msg2, msg3, msg4) is null
'--- function arguments ---
msg1      is x   ' Message line one
msg2      is x   ' Message line two
msg3      is x   ' Message line three
msg4      is x    ' Message line four
' --- Local Variables ---
win1      is b   ' Window Number
'------------------------
$openwin(win1, 5, 12, 4, 64)
$disp("Script ID:", 6,  6,,"H")
$disp($scriptid,    6, 17,,)
$disp(msg1,  8, 6,,"H")
$disp(msg2,  9, 6,,"H")
$disp(msg3, 10, 6,,"H")
$disp(msg4, 11, 6,,"H")
$acpt()
end ShowMessageWin
